// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using jasuindo_models;

namespace web_api_managemen_user.Migrations
{
    [DbContext(typeof(model_user_managemen))]
    [Migration("20220914082744_15_09_2022_model_user_management_db_v_01")]
    partial class _15_09_2022_model_user_management_db_v_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("jasuindo_models.m_action_feature", b =>
                {
                    b.Property<int>("m_action_feature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_action_feature_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("m_action_feature_name")
                        .IsRequired()
                        .HasColumnName("m_action_feature_name")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_action_feature_id");

                    b.HasIndex("m_action_feature_name")
                        .IsUnique();

                    b.ToTable("m_action_feature");
                });

            modelBuilder.Entity("jasuindo_models.m_feature", b =>
                {
                    b.Property<int>("m_feature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_feature_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("feature_icon")
                        .IsRequired()
                        .HasColumnName("feature_icon")
                        .HasColumnType("text");

                    b.Property<int?>("index")
                        .HasColumnName("index")
                        .HasColumnType("integer");

                    b.Property<string>("m_feature_name")
                        .IsRequired()
                        .HasColumnName("m_feature_name")
                        .HasColumnType("text");

                    b.Property<string>("name_link_feature")
                        .HasColumnName("name_link_feature")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_feature_id");

                    b.ToTable("m_feature");
                });

            modelBuilder.Entity("jasuindo_models.m_group_feature", b =>
                {
                    b.Property<int>("m_group_feature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_group_feature_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("group_feature_name")
                        .IsRequired()
                        .HasColumnName("group_feature_name")
                        .HasColumnType("text");

                    b.Property<int>("index")
                        .HasColumnName("index")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_group_feature_id");

                    b.ToTable("m_group_feature");
                });

            modelBuilder.Entity("jasuindo_models.m_group_user", b =>
                {
                    b.Property<int>("m_group_user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_group_user_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("m_group_user_name")
                        .IsRequired()
                        .HasColumnName("m_group_user_name")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_group_user_id");

                    b.ToTable("m_group_user");
                });

            modelBuilder.Entity("jasuindo_models.m_kelurahan_desa", b =>
                {
                    b.Property<string>("m_kelurahan_desa_id")
                        .HasColumnName("m_kelurahan_desa_id")
                        .HasColumnType("text");

                    b.Property<string>("jenis_kabupaten_kota")
                        .IsRequired()
                        .HasColumnName("jenis_kabupaten_kota")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("kode_pos")
                        .IsRequired()
                        .HasColumnName("kode_pos")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("nama_kabupaten_kota")
                        .IsRequired()
                        .HasColumnName("nama_kabupaten_kota")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("nama_kecamatan")
                        .IsRequired()
                        .HasColumnName("nama_kecamatan")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("nama_kelurahan_desa")
                        .IsRequired()
                        .HasColumnName("nama_kelurahan_desa")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("nama_propinsi")
                        .IsRequired()
                        .HasColumnName("nama_propinsi")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("m_kelurahan_desa_id");

                    b.ToTable("m_kelurahan_desa");
                });

            modelBuilder.Entity("jasuindo_models.m_lokasi", b =>
                {
                    b.Property<int>("m_lokasi_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_lokasi_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("alamat")
                        .IsRequired()
                        .HasColumnName("alamat")
                        .HasColumnType("text");

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("kabupaten")
                        .IsRequired()
                        .HasColumnName("kabupaten")
                        .HasColumnType("text");

                    b.Property<string>("kecamatan")
                        .IsRequired()
                        .HasColumnName("kecamatan")
                        .HasColumnType("text");

                    b.Property<string>("kelurahan")
                        .IsRequired()
                        .HasColumnName("kelurahan")
                        .HasColumnType("text");

                    b.Property<string>("kode_lokasi")
                        .IsRequired()
                        .HasColumnName("kode_lokasi")
                        .HasColumnType("text");

                    b.Property<int>("m_organisasi_id")
                        .HasColumnName("m_organisasi_id")
                        .HasColumnType("integer");

                    b.Property<string>("nama_lokasi")
                        .IsRequired()
                        .HasColumnName("nama_lokasi")
                        .HasColumnType("text");

                    b.Property<string>("name_location_secondary")
                        .HasColumnName("name_location_secondary")
                        .HasColumnType("text");

                    b.Property<int>("parent_index")
                        .HasColumnName("parent_index")
                        .HasColumnType("integer");

                    b.Property<int>("parent_lokasi_id")
                        .HasColumnName("parent_lokasi_id")
                        .HasColumnType("integer");

                    b.Property<string>("provinsi")
                        .IsRequired()
                        .HasColumnName("provinsi")
                        .HasColumnType("text");

                    b.Property<bool>("status_aktif")
                        .HasColumnName("status_aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_lokasi_id");

                    b.HasIndex("m_organisasi_id");

                    b.ToTable("m_lokasi");
                });

            modelBuilder.Entity("jasuindo_models.m_organisasi", b =>
                {
                    b.Property<int>("m_organisasi_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_organisasi_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("alamat_organisasi")
                        .HasColumnName("alamat_organisasi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("email_organisasi")
                        .HasColumnName("email_organisasi")
                        .HasColumnType("text");

                    b.Property<string>("nama_oganisasi")
                        .IsRequired()
                        .HasColumnName("nama_oganisasi")
                        .HasColumnType("text");

                    b.Property<string>("npwp_organiasi")
                        .HasColumnName("npwp_organiasi")
                        .HasColumnType("text");

                    b.Property<string>("path_logo_organiasi")
                        .HasColumnName("path_logo_organiasi")
                        .HasColumnType("text");

                    b.Property<bool>("status_aktif")
                        .HasColumnName("status_aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("telepon_organisasi")
                        .HasColumnName("telepon_organisasi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.Property<string>("website_organisasi")
                        .HasColumnName("website_organisasi")
                        .HasColumnType("text");

                    b.HasKey("m_organisasi_id");

                    b.ToTable("m_organisasi");
                });

            modelBuilder.Entity("jasuindo_models.m_project_application", b =>
                {
                    b.Property<int>("m_project_application_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_project_application_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("key_project")
                        .IsRequired()
                        .HasColumnName("key_project")
                        .HasColumnType("text");

                    b.Property<string>("m_project_application_name")
                        .IsRequired()
                        .HasColumnName("m_project_application_name")
                        .HasColumnType("text");

                    b.Property<string>("scope_fitur_project")
                        .HasColumnName("scope_fitur_project")
                        .HasColumnType("text");

                    b.Property<bool>("status_aktif")
                        .HasColumnName("status_aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("type_project")
                        .HasColumnName("type_project")
                        .HasColumnType("text");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_project_application_id");

                    b.ToTable("m_project_application");
                });

            modelBuilder.Entity("jasuindo_models.m_user", b =>
                {
                    b.Property<Guid>("m_user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_user_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<string>("m_user_email")
                        .IsRequired()
                        .HasColumnName("m_user_email")
                        .HasColumnType("text");

                    b.Property<string>("m_user_password")
                        .IsRequired()
                        .HasColumnName("m_user_password")
                        .HasColumnType("text");

                    b.Property<string>("m_username")
                        .IsRequired()
                        .HasColumnName("m_username")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.Property<string>("status_aktif")
                        .IsRequired()
                        .HasColumnName("status_aktif")
                        .HasColumnType("text");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("m_user_id");

                    b.ToTable("m_user");
                });

            modelBuilder.Entity("jasuindo_models.map_feature_group", b =>
                {
                    b.Property<Guid>("map_feature_group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("map_feature_group_id")
                        .HasColumnType("uuid");

                    b.Property<string>("action_feature")
                        .IsRequired()
                        .HasColumnName("action_feature")
                        .HasColumnType("text");

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<int>("m_group_user_id")
                        .HasColumnName("m_group_user_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("map_feature_group_project_id")
                        .HasColumnName("map_feature_group_project_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("map_feature_group_id");

                    b.HasIndex("m_group_user_id");

                    b.HasIndex("map_feature_group_project_id");

                    b.ToTable("map_feature_group");
                });

            modelBuilder.Entity("jasuindo_models.map_feature_group_project", b =>
                {
                    b.Property<Guid>("map_feature_group_project_id")
                        .HasColumnName("map_feature_group_project_id")
                        .HasColumnType("uuid");

                    b.Property<string>("feature_icon")
                        .IsRequired()
                        .HasColumnName("feature_icon")
                        .HasColumnType("text");

                    b.Property<int>("m_feature_id")
                        .HasColumnName("m_feature_id")
                        .HasColumnType("integer");

                    b.Property<int>("m_group_feature_id")
                        .HasColumnName("m_group_feature_id")
                        .HasColumnType("integer");

                    b.Property<int>("m_project_application_id")
                        .HasColumnName("m_project_application_id")
                        .HasColumnType("integer");

                    b.Property<bool>("status_aktif")
                        .HasColumnName("status_aktif")
                        .HasColumnType("boolean");

                    b.HasKey("map_feature_group_project_id");

                    b.HasIndex("m_feature_id");

                    b.HasIndex("m_group_feature_id");

                    b.HasIndex("m_project_application_id");

                    b.ToTable("map_feature_group_project");
                });

            modelBuilder.Entity("jasuindo_models.map_group_user", b =>
                {
                    b.Property<Guid>("map_group_user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("map_group_user_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<int>("m_group_user_id")
                        .HasColumnName("m_group_user_id")
                        .HasColumnType("integer");

                    b.Property<int>("m_project_application_id")
                        .HasColumnName("m_project_application_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("m_user_id")
                        .HasColumnName("m_user_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("status_aktif")
                        .HasColumnName("status_aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("map_group_user_id");

                    b.HasIndex("m_group_user_id");

                    b.HasIndex("m_project_application_id");

                    b.HasIndex("m_user_id");

                    b.ToTable("map_group_user");
                });

            modelBuilder.Entity("jasuindo_models.map_user_lokasi", b =>
                {
                    b.Property<Guid>("map_user_lokasi_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("map_user_lokasi_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("create_at")
                        .HasColumnName("create_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("create_by")
                        .HasColumnName("create_by")
                        .HasColumnType("text");

                    b.Property<int>("m_lokasi_id")
                        .HasColumnName("m_lokasi_id")
                        .HasColumnType("integer");

                    b.Property<int>("m_project_application_id")
                        .HasColumnName("m_project_application_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("m_user_id")
                        .HasColumnName("m_user_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("update_at")
                        .HasColumnName("update_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("update_by")
                        .HasColumnName("update_by")
                        .HasColumnType("text");

                    b.HasKey("map_user_lokasi_id");

                    b.HasIndex("m_lokasi_id");

                    b.HasIndex("m_project_application_id");

                    b.HasIndex("m_user_id");

                    b.ToTable("map_user_lokasi");
                });

            modelBuilder.Entity("jasuindo_models.m_lokasi", b =>
                {
                    b.HasOne("jasuindo_models.m_organisasi", "m_organisasi")
                        .WithMany("m_lokasi")
                        .HasForeignKey("m_organisasi_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("jasuindo_models.map_feature_group", b =>
                {
                    b.HasOne("jasuindo_models.m_group_user", "m_group_user")
                        .WithMany("map_feature_groups")
                        .HasForeignKey("m_group_user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("jasuindo_models.map_feature_group_project", "map_feature_group_project")
                        .WithMany("map_feature_group")
                        .HasForeignKey("map_feature_group_project_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("jasuindo_models.map_feature_group_project", b =>
                {
                    b.HasOne("jasuindo_models.m_feature", "m_feature")
                        .WithMany("map_feature_group_project")
                        .HasForeignKey("m_feature_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("jasuindo_models.m_group_feature", "m_group_feature")
                        .WithMany("map_feature_group_project")
                        .HasForeignKey("m_group_feature_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("jasuindo_models.m_project_application", "m_project_application")
                        .WithMany("map_feature_group_project")
                        .HasForeignKey("m_project_application_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("jasuindo_models.map_group_user", b =>
                {
                    b.HasOne("jasuindo_models.m_group_user", "m_group_user")
                        .WithMany("map_group_user")
                        .HasForeignKey("m_group_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jasuindo_models.m_project_application", "m_project_application")
                        .WithMany("map_group_user")
                        .HasForeignKey("m_project_application_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("jasuindo_models.m_user", "m_user")
                        .WithMany("map_group_user")
                        .HasForeignKey("m_user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("jasuindo_models.map_user_lokasi", b =>
                {
                    b.HasOne("jasuindo_models.m_lokasi", "m_lokasi")
                        .WithMany("map_user_lokasi")
                        .HasForeignKey("m_lokasi_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("jasuindo_models.m_project_application", "m_project_application")
                        .WithMany("map_user_lokasi")
                        .HasForeignKey("m_project_application_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("jasuindo_models.m_user", "m_user")
                        .WithMany("map_user_lokasi")
                        .HasForeignKey("m_user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
